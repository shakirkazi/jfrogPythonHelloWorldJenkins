pipeline {
    agent any
	tools {
        jfrog 'jfrog-cli'
    }

    environment {
        ARTIFACTORY_SERVER = "$ARTIFACTORY_SERVER"
        PYPI_REPO = "$PYPI_REPO"
        PACKAGE_NAME = "$PACKAGE_NAME"

        PATH = "/usr/local/bin:$PATH"  // Ensure this is the correct path where jfrog is located
    }

    stages {
	stage('Setup') {
            steps {
                script {
		 // Check if server configuration exists and remove it
                    sh '''
                    if jfrog config show artifactory-server > /dev/null 2>&1; then
                        jfrog config remove artifactory-server
                    fi
                    '''
                    // Configure JFrog CLI with your Artifactory server details
                    withCredentials([usernamePassword(credentialsId: 'JFrogJenkinsCred', usernameVariable: 'JFROG_USER', passwordVariable: 'JFROG_PASSWORD')]) {
                        sh 'jfrog config add artifactory-server --artifactory-url=$ARTIFACTORY_SERVER --user=$JFROG_USER --password=$JFROG_PASSWORD --interactive=false'
                    }
                }
            }
        }

        stage('Update Version') {
            steps {
                script {
                    // Update the version in setup.py 
                    sh '''
                    build_number=${BUILD_NUMBER}
                    setup_py_file="setup.py"
                    sed -i "s/\\(version=\\s*['\\\"]\\([0-9]\\+\\.[0-9]\\+\\)\\.x['\\\"]\\)/\\1.$build_number/" $setup_py_file
                    '''
                    // Confirm the version has been updated
                    sh '''
                    echo "Updated setup.py:"
                    cat $setup_py_file
                    '''
                }
            }
        }
        stage('Build') {
            steps {
                script {
                    // Your build steps here
                    sh 'python3 setup.py sdist bdist_wheel'
                }
            }
        }
        stage('Verify Artifacts') {
            steps {
                script {
                    // Verify the files in the dist directory
                    sh '''
                    echo "Listing contents of dist directory:"
                    ls -ltr dist/
                    '''
                }
            }
        }
        stage('Publish') {
            steps {
                script {
                    // Publish to Artifactory
                    sh '''
                        #!/bin/bash
                        echo "Uploading files to Artifactory..."
                        export JFROG_CLI_LOG_LEVEL=DEBUG
                        jfrog rt upload --flat=true dist/${PACKAGE_NAME}-*.tar.gz $PYPI_REPO
                    '''
                }
            }
        }
    }

    post {
        always {
            script {
                // Get the current build number
                def buildNumber = env.BUILD_NUMBER

                // Create a Git tag with the build number
                sh '''
                echo git tag -a v${BUILD_NUMBER} -m "Build #${BUILD_NUMBER}"
                echo git push origin v${BUILD_NUMBER}
                '''

                // Clean workspace
                cleanWs()
            }
        }
    }
}
